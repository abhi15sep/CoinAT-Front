{"version":3,"sources":["components/Loading.js","components/CurrentExchangeBar.js","reducers/bot.js","reducers/coin.js","components/SettingBar.js","components/NewListing.js","components/ExchangeList.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","ExchangeContainer","Info","p","CurrentExchangeBar","useSelector","state","coin","upbitBitKrw","usdToKrw","binanceBitUsdt","convertUsdToKrw","parseFloat","toFixed","sendMessage","createAction","handleActions","action","produce","draft","isSending","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","loadBianceNewListing","checkUpbitCoin","checkBinanceCoin","setUpbit","setBinance","isbitkrwLoading","payload","trade_price","upbitBitKrwError","error","isUsdToKrwLoading","rate","usdToKrwError","isbitusdtLoading","binanceBitUsdtError","isUpbitNewListingLoading","filteredList","data","list","filter","v","title","includes","map","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","coinList","SettingBarDiv","InputWrapper","SelectContainer","SelectInput","input","SelectBtn","button","ApiContainer","ApiInput","SecretInput","SettingBtn","React","memo","coinInfo","useState","selected","setSelected","percent","setPercent","currentPer","setCurrentPer","dispatch","useDispatch","timer","useRef","wrapper","onSelectChange","useCallback","selectedOption","value","onPercentChange","e","target","startBot","selectedCoin","symbol","converted","blast","coinPer","last","Math","abs","console","log","binance","onSetting","innerHTML","current","setInterval","clearInterval","onToggle","style","display","onClickUpbit","alert","onClickBinance","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","onClick","ref","onChange","options","label","type","min","max","step","placeholder","NewListingDiv","hide","FontDiv","NewListingUl","ul","NewListingli","li","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","withComponent","BinanceInfoli","NewListing","isHide","setHide","container","onChangeSelect","id","dataset","parseInt","checkTodaysNotice","upbitNewNotices","binanceNewNotices","length","notices","useEffect","faPlus","faMinus","data-id","key","v4","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinContainer","Coin","head","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","sortType","setSortType","getExchangeTickers","a","setTimeout","upbit","ccxt","fetchTickers","tickers1","tickers2","Object","keys","slice","indexOf","low","high","sort","x","y","convertedX","convertedY","clearTimeout","onSort","idx","convertedBinance","Header","Title","App","Boolean","window","location","hostname","match","combineReducers","bot","loadBitKrw","watchBitKrw","loadCurrency","watchCurrency","loadBitUsdt","watchBitUsdt","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","coinSaga","dotenv","config","API_URL","process","loadBitKrwAPI","axios","get","call","result","put","takeLatest","loadCurrencyAPI","loadBitUsdtAPI","loadUpbitNewListingAPI","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","all","fork","watchSendMessage","botSaga","sendMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7f5feff7.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nconst ExchangeContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 0.75rem;\n`;\nfunction CurrentExchangeBar() {\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = () => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  };\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw()} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n            parseFloat(upbitBitKrw, 10)) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\n\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const UPBIT_BITCOIN_KRW_REQUEST = \"UPBIT_BITCOIN_KRW_REQUEST\";\nexport const UPBIT_BITCOIN_KRW_SUCCESS = \"UPBIT_BITCOIN_KRW_SUCCESS\";\nexport const UPBIT_BITCOIN_KRW_FAILURE = \"UPBIT_BITCOIN_KRW_FAILURE\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\nexport const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\n\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW_REQUEST);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT_REQUEST);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\n\nconst initialState = {\n  isbitkrwLoading: false,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: false,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: false,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BSV\",\n    \"BTG\",\n    \"BTT\",\n    \"CVC\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MFT\",\n    \"MTL\",\n    \"NEO\",\n    \"NPXS\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STORM\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n};\nexport default handleActions(\n  {\n    [UPBIT_BITCOIN_KRW_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = true;\n      }),\n    [UPBIT_BITCOIN_KRW_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = false;\n        draft.upbitBitKrw = action.payload[0].trade_price;\n      }),\n    [UPBIT_BITCOIN_KRW_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitBitKrwError = action.payload.error;\n      }),\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = action.payload[0].rate;\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: {\n            data: { list },\n          },\n        } = action;\n        const filteredList = list\n          .filter((v) => v.title.includes(\"BTC\"))\n          .map((v) => {\n            if (\n              moment(v.created_at).format(\"YYYY-MM-DD\") ===\n              moment().format(\"YYYY-MM-DD\")\n            )\n              return { new: true, notice: v };\n            else return { new: false, notice: v };\n          });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n  },\n  initialState\n);\n","import React, { useState, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { setUpbit, setBinance } from \"../reducers/coin\";\nimport Select from \"react-select\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\n/*const Select = styled.select`\n  flex: 1;\n  height: 25px;\n  border: none;\n  background-color: white;\n`;*/\nconst SelectInput = styled.input`\n  width: 30px;\n  height: 25px;\n  padding: 0px 5px;\n  border: none;\n  margin-left: 5px;\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n`;\n\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst ApiInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n`;\nfunction SettingBar({ coinInfo }) {\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const [selected, setSelected] = useState(-1);\n  const [percent, setPercent] = useState(-1);\n  const [currentPer, setCurrentPer] = useState(-1);\n  const dispatch = useDispatch();\n  const timer = useRef();\n  const wrapper = useRef();\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const onSelectChange = useCallback((selectedOption) => {\n    setSelected(selectedOption.value);\n  }, []);\n  const onPercentChange = useCallback((e) => {\n    const { target } = e;\n    if (target.value >= 0 && target.value <= 100) {\n      setPercent(target.value);\n    } else {\n      target.value = 0;\n    }\n  }, []);\n  const startBot = useCallback(() => {\n    const selectedCoin = coinInfo.filter((v) => v.symbol === selected)[0];\n    const converted = selectedCoin.blast * upbitBitKrw;\n    const coinPer = (\n      ((selectedCoin.last - converted) / selectedCoin.last) *\n      100\n    ).toFixed(2);\n    if (Math.abs(coinPer) > percent) {\n      if (currentPer !== Math.abs(coinPer)) {\n        console.log(selectedCoin, coinPer);\n        dispatch(\n          sendMessage({\n            coinInfo: selectedCoin,\n            binance: converted,\n            percent: coinPer,\n          })\n        );\n      }\n      setCurrentPer(coinPer);\n    }\n  }, [selected, percent, coinInfo, dispatch, upbitBitKrw, currentPer]);\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      if (selected !== -1 && percent !== -1) {\n        if (target.innerHTML === \"설정\") {\n          timer.current = setInterval(startBot, 2000);\n          target.innerHTML = \"취소\";\n        } else {\n          target.innerHTML = \"설정\";\n          clearInterval(timer.current);\n        }\n      }\n    },\n    [selected, percent, startBot]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  const onClickUpbit = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (upbitApi.current.value === \"\" || upbitSec.current.value === \"\") {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setUpbit({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        dispatch(\n          setUpbit({\n            upbitApi: \"\",\n            upbitSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickBinance = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setBinance({\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setBinance({\n            binanceApi: \"\",\n            binanceSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SelectContainer>\n          <Select\n            onChange={onSelectChange}\n            options={coinList.map((v) => {\n              return { value: v, label: v };\n            })}\n          />\n          <SelectInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onPercentChange}\n          />\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n        <ApiContainer>\n          <ApiInput ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n          <SecretInput\n            ref={upbitSec}\n            type=\"password\"\n            placeholder=\"업비트 secret\"\n          />\n          <SettingBtn onClick={onClickUpbit}>확인</SettingBtn>\n        </ApiContainer>\n        <ApiContainer>\n          <ApiInput ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n          <SecretInput\n            ref={binanceSec}\n            type=\"password\"\n            placeholder=\"바이낸스 secret\"\n          />\n          <SettingBtn onClick={onClickBinance}>확인</SettingBtn>\n        </ApiContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { checkUpbitCoin, checkBinanceCoin } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"35vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div``;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nfunction NewListing() {\n  const dispatch = useDispatch();\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    if (container.current.style.display === \"flex\") {\n      container.current.style.display = \"none\";\n      setHide(true);\n    } else {\n      container.current.style.display = \"flex\";\n      setHide(false);\n    }\n  }, []);\n\n  const checkTodaysNotice = useCallback(() => {\n    const upbitNewNotices = upbitNewListing.filter((v) => v.new === true);\n    const binanceNewNotices = binanceNewListing.filter((v) => v.new === true);\n    if (upbitNewNotices.length > 0) {\n      dispatch(\n        checkUpbitCoin({\n          notices: upbitNewNotices, //upbitNewNotices,\n        })\n      );\n    }\n    if (binanceNewNotices.length > 0) {\n      dispatch(\n        checkBinanceCoin({\n          notices: binanceNewNotices,\n        })\n      );\n    }\n  }, [upbitNewListing, binanceNewListing, dispatch]);\n  useEffect(() => {\n    checkTodaysNotice();\n  }, [checkTodaysNotice]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer style={{ display: \"flex\" }} ref={container}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((v) => {\n                return (\n                  <UpbitInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((v) => {\n                return (\n                  <BinanceInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </BinanceInfoli>\n                );\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ccxt from \"ccxt\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUsdToKrw,\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadUpbitNewListing,\n  loadBianceNewListing,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\n//const exchangeList = [\"Upbit\", \"Binance\"];\nconst ExchangesWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 70%;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 5px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Coin = styled.div`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.8rem;\n  margin-right: 5px;\n  &:first-child {\n  }\n  &:nth-child(2) {\n  }\n  &:nth-child(5) {\n    p {\n      font-size: 0.6rem;\n    }\n  }\n`;\nfunction ExchangeList() {\n  // const [selected, setSelected] = useState(0);\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [sortType, setSortType] = useState(0);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(async () => {\n    if (timer.current) {\n      timer.current = setTimeout(getExchangeTickers, 2500);\n    }\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const upbit = new ccxt.upbit();\n    const binance = new ccxt.binance();\n    let tickers1 = await upbit.fetchTickers(coinList.map((v) => `${v}/KRW`)),\n      tickers2 = await binance.fetchTickers(coinList.map((v) => `${v}/BTC`));\n    tickers1 = Object.keys(tickers1)\n      .map((v) => {\n        return {\n          symbol: tickers1[v].symbol.slice(0, tickers1[v].symbol.indexOf(\"/\")),\n          last: tickers1[v].last,\n          low: tickers1[v].low,\n          high: tickers1[v].high,\n          blast:\n            tickers2[\n              `${tickers1[v].symbol.slice(\n                0,\n                tickers1[v].symbol.indexOf(\"/\")\n              )}/BTC`\n            ].last,\n        };\n      })\n      .sort((x, y) => {\n        const convertedX = x.blast * upbitBitKrw,\n          convertedY = y.blast * upbitBitKrw;\n        if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType === -4)\n          return (x.last - convertedX) / x.last > (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n        else if (sortType === 4)\n          return (x.last - convertedX) / x.last < (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n      });\n    dispatch(loadUpbitBitKrw());\n    dispatch(loadUsdToKrw());\n    dispatch(loadBinanceBitUsdt());\n    dispatch(loadUpbitNewListing());\n    dispatch(loadBianceNewListing());\n    if (loading === true) setLoading(false);\n    if (isFirstLoading === false) setIsFirstLoading(true);\n    setUpbitCoinInfo(tickers1);\n  }, [loading, isFirstLoading, coinList, dispatch, sortType, upbitBitKrw]);\n  useEffect(() => {\n    timer.current = setTimeout(getExchangeTickers, 2500);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers]);\n  const onSort = useCallback(\n    (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType === 1) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          setSortType(-1);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType === 2) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          setSortType(-2);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          console.log();\n          setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType === 3) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          setSortType(-3);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType === 4) {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / x.last) * 100 >\n              ((y.last - convertedY) / y.last) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(-4);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / x.last) * 100 <\n              ((y.last - convertedY) / y.last) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(4);\n        }\n      }\n    },\n    [sortType, upbitCoinInfo, upbitBitKrw]\n  );\n  return (\n    <div>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n        <SettingBar coinInfo={upbitCoinInfo} />\n      </ExchangesContainer>\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <ExchangeCoinsContainer>\n          {\n            <CoinContainer>\n              <Coin head={true} onClick={onSort} data-id={1}>\n                코인\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={2}>\n                현재 가(₩)\n              </Coin>\n              <Coin head={true}>최저 가 </Coin>\n              <Coin head={true}>최고 가</Coin>\n              <Coin head={true} onClick={onSort} data-id={3}>\n                바이낸스(BTC)\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={4}>\n                차이(%)\n              </Coin>\n            </CoinContainer>\n          }\n          {upbitCoinInfo.map((v, idx) => {\n            const convertedBinance = (v.blast * upbitBitKrw).toFixed(2);\n            const percent = (\n              ((v.last - convertedBinance) / v.last) *\n              100\n            ).toFixed(2);\n            return (\n              <CoinContainer key={v4()}>\n                <Coin>{v.symbol}</Coin>\n                <Coin>{v.last}</Coin>\n                <Coin>{v.low} </Coin>\n                <Coin>{v.high}</Coin>\n                <Coin>\n                  {v.blast?.toFixed(8)}\n                  <p>= {convertedBinance}₩</p>\n                </Coin>\n                <Coin>{percent}%</Coin>\n              </CoinContainer>\n            );\n          })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </div>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport SettingBar from \"./components/SettingBar\";\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nfunction App() {\n  return (\n    <>\n      <div>\n        <Header>\n          <Title>CoinAT</Title>\n        </Header>\n        <ExchangeList />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport {\n  UPBIT_BITCOIN_KRW_SUCCESS,\n  UPBIT_BITCOIN_KRW_FAILURE,\n  UPBIT_BITCOIN_KRW_REQUEST,\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  BINANCE_BITCOIN_USDT_REQUEST,\n  BINANCE_BITCOIN_USDT_FAILURE,\n  BINANCE_BITCOIN_USDT_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction loadBitKrwAPI() {\n  return axios.get(\"https://api.upbit.com/v1/ticker?markets=KRW-BTC\");\n}\nfunction* loadBitKrw(action) {\n  try {\n    const result = yield call(loadBitKrwAPI, action.payload);\n    yield put({\n      type: UPBIT_BITCOIN_KRW_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BITCOIN_KRW_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitKrw() {\n  yield takeLatest(UPBIT_BITCOIN_KRW_REQUEST, loadBitKrw);\n}\n\nfunction loadCurrencyAPI() {\n  return axios.get(\"https://api.manana.kr/exchange/rate/KRW/USD.json\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield takeLatest(CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.us/api/v1/aggTrades?limit=1&symbol=BTCUSD\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(\n    \"https://api-manager.upbit.com/api/v1/notices/search?search=%5B%EA%B1%B0%EB%9E%98%5D&page=1&per_page=20&before=&target=non_ios&thread_name=general\"\n  );\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice`);\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data);\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data);\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchBitKrw),\n    fork(watchCurrency),\n    fork(watchBitUsdt),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}