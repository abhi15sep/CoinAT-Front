{"version":3,"sources":["components/Loading.js","components/CurrentExchangeBar.js","reducers/bot.js","reducers/coin.js","components/ItemList.js","components/SettingBar.js","components/NewListing.js","components/ExchangeList.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","ExchangeContainer","section","Info","p","CurrentExchangeBar","useSelector","state","coin","upbitBitKrw","usdToKrw","binanceBitUsdt","convertUsdToKrw","parseFloat","toFixed","sendMessage","createAction","cancelMessage","handleActions","action","produce","draft","isSending","loadCoinList","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","checkUpbitCoin","checkBinanceCoin","setUpbit","setBinance","coinInfo","length","payload","coinList","map","name","isbitkrwLoading","trade_price","upbitBitKrwError","error","isUsdToKrwLoading","rate","usdToKrwError","isbitusdtLoading","binanceBitUsdtError","isUpbitNewListingLoading","filteredList","data","list","filter","v","title","includes","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","ItemListDiv","ItemListUl","ul","ItemListLi","li","ItemSpan","span","ItemInput","input","ItemList","coins","onChangePercent","key","v4","symbol","type","min","max","step","placeholder","onChange","data-name","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","button","ApiContainer","ApiInput","SecretInput","SettingBtn","React","memo","dispatch","useDispatch","timer","useRef","wrapper","useState","setCoins","coinPer","setCoinPer","checkPer","startBot","useCallback","coinlist","krw","Object","keys","forEach","indexOf","converted","blast","per","last","Math","abs","current","upbit","binance","percent","useEffect","e","target","value","dataset","onSetting","innerHTML","alert","onToggle","style","display","onClickUpbit","onClickBinance","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","onClick","ref","NewListingDiv","hide","FontDiv","NewListingUl","NewListingli","selected","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","withComponent","BinanceInfoli","NewListing","setSelected","isHide","setHide","container","onChangeSelect","id","parseInt","checkTodaysNotice","upbitNewNotices","binanceNewNotices","notices","faPlus","faMinus","data-id","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","sortType","setSortType","getExchangeTickers","a","setTimeout","ccxt","fetchTickers","tickers1","tickers2","slice","low","high","sort","x","y","convertedX","convertedY","clearTimeout","onSort","console","log","idx","convertedBinance","Header","header","Title","App","Boolean","window","location","hostname","match","combineReducers","bot","loadBitKrw","watchBitKrw","loadCurrency","watchCurrency","loadBitUsdt","watchBitUsdt","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","coinSaga","dotenv","config","API_URL","process","loadBitKrwAPI","axios","get","call","result","put","takeLatest","loadCurrencyAPI","loadBitUsdtAPI","loadUpbitNewListingAPI","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","sendMessageAPI","cancelMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.320e20a9.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 33px;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = () => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  };\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw()} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n            convertUsdToKrw()) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW_REQUEST = \"UPBIT_BITCOIN_KRW_REQUEST\";\nexport const UPBIT_BITCOIN_KRW_SUCCESS = \"UPBIT_BITCOIN_KRW_SUCCESS\";\nexport const UPBIT_BITCOIN_KRW_FAILURE = \"UPBIT_BITCOIN_KRW_FAILURE\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\nexport const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW_REQUEST);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT_REQUEST);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\n\nconst initialState = {\n  isbitkrwLoading: false,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: false,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: false,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STORM\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n};\nexport default handleActions(\n  {\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BITCOIN_KRW_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = true;\n      }),\n    [UPBIT_BITCOIN_KRW_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = false;\n        draft.upbitBitKrw = action.payload[0].trade_price;\n      }),\n    [UPBIT_BITCOIN_KRW_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitBitKrwError = action.payload.error;\n      }),\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = action.payload[0].rate;\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: {\n            data: { list },\n          },\n        } = action;\n        const filteredList = list\n          .filter((v) => v.title.includes(\"BTC\"))\n          .map((v) => {\n            if (\n              moment(v.created_at).format(\"YYYY-MM-DD\") ===\n              moment().format(\"YYYY-MM-DD\")\n            )\n              return { new: true, notice: v };\n            else return { new: false, notice: v };\n          });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n  },\n  initialState\n);\n","import React, { useRef, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\n\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: white;\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n`;\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 1px solid #e3e3e3;\n  width: 30%;\n  padding: 5px;\n`;\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi key={v4()}>\n                <ItemSpan>{coin.symbol}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin.symbol}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default ItemList;\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendMessage, cancelMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { setUpbit, setBinance } from \"../reducers/coin\";\nimport Select from \"react-select\";\nimport ItemList from \"./ItemList\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\n/*const Select = styled.select`\n  flex: 1;\n  height: 25px;\n  border: none;\n  background-color: white;\n`;*/\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\n\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst ApiInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const timer = useRef();\n  const wrapper = useRef();\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  //const currentPer = useRef();\n\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  const checkPer = useRef({});\n\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const startBot = useCallback(\n    (coinlist, krw) => {\n      const coinPerLength = Object.keys(coinPer).length;\n      if (coinPerLength > 0) {\n        coinlist.forEach((coin) => {\n          if (\n            Object.keys(coinPer).indexOf(coin.symbol) !== -1 &&\n            coinPer[coin.symbol] !== \"\"\n          ) {\n            const converted = (coin.blast * krw).toFixed(2);\n            const p = parseFloat(coinPer[coin.symbol], 10);\n            const per = parseFloat(\n              (((coin.last - converted) / converted) * 100).toFixed(2),\n              10\n            );\n            if (Math.abs(per) > p) {\n              if (Object.keys(checkPer.current).indexOf(coin.symbol) === -1) {\n                checkPer.current = {\n                  ...checkPer.current,\n                  [coin.symbol]: per,\n                };\n                dispatch(\n                  sendMessage({\n                    coinInfo: {\n                      symbol: coin.symbol,\n                      upbit: coin.last,\n                      binance: converted,\n                      percent: per,\n                    },\n                  })\n                );\n              } else {\n                if (checkPer.current[coin.symbol] !== per) {\n                  checkPer.current = {\n                    ...checkPer.current,\n                    [coin.symbol]: per,\n                  };\n                  dispatch(\n                    sendMessage({\n                      coinInfo: {\n                        symbol: coin.symbol,\n                        upbit: coin.last,\n                        binance: converted,\n                        percent: per,\n                      },\n                    })\n                  );\n                }\n              }\n            }\n          }\n        });\n      }\n    },\n    [coinPer, dispatch]\n  );\n  useEffect(() => {\n    if (timer.current) {\n      startBot(coinInfo, upbitBitKrw);\n    }\n    if (coins.length === 0) {\n      setCoins(coinInfo);\n    }\n  }, [coinInfo, upbitBitKrw, startBot, coins]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          timer.current = true;\n        } else {\n          target.innerHTML = \"설정\";\n          timer.current = false;\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  const onClickUpbit = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (upbitApi.current.value === \"\" || upbitSec.current.value === \"\") {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setUpbit({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        dispatch(\n          setUpbit({\n            upbitApi: \"\",\n            upbitSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickBinance = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setBinance({\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setBinance({\n            binanceApi: \"\",\n            binanceSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <ApiContainer>\n          <ApiInput ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n          <SecretInput\n            ref={upbitSec}\n            type=\"password\"\n            placeholder=\"업비트 secret\"\n          />\n          <SettingBtn onClick={onClickUpbit}>확인</SettingBtn>\n        </ApiContainer>\n        <ApiContainer>\n          <ApiInput ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n          <SecretInput\n            ref={binanceSec}\n            type=\"password\"\n            placeholder=\"바이낸스 secret\"\n          />\n          <SettingBtn onClick={onClickBinance}>확인</SettingBtn>\n        </ApiContainer>\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>알림 설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { checkUpbitCoin, checkBinanceCoin } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"35vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nfunction NewListing() {\n  const dispatch = useDispatch();\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    if (container.current.style.display === \"flex\") {\n      container.current.style.display = \"none\";\n      setHide(true);\n    } else {\n      container.current.style.display = \"flex\";\n      setHide(false);\n    }\n  }, []);\n\n  const checkTodaysNotice = useCallback(() => {\n    const upbitNewNotices = upbitNewListing.filter((v) => v.new === true);\n    const binanceNewNotices = binanceNewListing.filter((v) => v.new === true);\n    if (upbitNewNotices.length > 0) {\n      dispatch(\n        checkUpbitCoin({\n          notices: upbitNewNotices, //upbitNewNotices,\n        })\n      );\n    }\n    if (binanceNewNotices.length > 0) {\n      dispatch(\n        checkBinanceCoin({\n          notices: binanceNewNotices,\n        })\n      );\n    }\n  }, [upbitNewListing, binanceNewListing, dispatch]);\n  useEffect(() => {\n    checkTodaysNotice();\n  }, [checkTodaysNotice]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer style={{ display: \"flex\" }} ref={container}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((v) => {\n                return (\n                  <UpbitInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((v) => {\n                return (\n                  <BinanceInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </BinanceInfoli>\n                );\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ccxt from \"ccxt\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUsdToKrw,\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadUpbitNewListing,\n  loadBianceNewListing,\n  loadCoinInfo,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\n//const exchangeList = [\"Upbit\", \"Binance\"];\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 60%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Coin = styled.div`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:first-child {\n  }\n  &:nth-child(2) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(4) {\n  }\n  &:nth-child(5) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\nfunction ExchangeList() {\n  // const [selected, setSelected] = useState(0);\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(async () => {\n    if (timer.current) {\n      timer.current = setTimeout(getExchangeTickers, 2500);\n    }\n    //console.log(coinList);\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const upbit = new ccxt.upbit();\n    const binance = new ccxt.binance();\n    let tickers1 = await upbit.fetchTickers(coinList.map((v) => `${v}/KRW`)),\n      tickers2 = await binance.fetchTickers(coinList.map((v) => `${v}/BTC`));\n    tickers1 = Object.keys(tickers1)\n      .map((v) => {\n        return {\n          symbol: tickers1[v].symbol.slice(0, tickers1[v].symbol.indexOf(\"/\")),\n          last: tickers1[v].last,\n          low: tickers1[v].low,\n          high: tickers1[v].high,\n          blast:\n            tickers2[\n              `${tickers1[v].symbol.slice(\n                0,\n                tickers1[v].symbol.indexOf(\"/\")\n              )}/BTC`\n            ].last,\n        };\n      })\n      .sort((x, y) => {\n        const convertedX = x.blast * upbitBitKrw,\n          convertedY = y.blast * upbitBitKrw;\n        if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType === -4)\n          return (x.last - convertedX) / x.last > (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n        else if (sortType === 4)\n          return (x.last - convertedX) / x.last < (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n      });\n    dispatch(loadUpbitBitKrw());\n    dispatch(loadUsdToKrw());\n    dispatch(loadBinanceBitUsdt());\n    dispatch(loadUpbitNewListing());\n    //dispatch(loadBianceNewListing());\n    if (loading === true) setLoading(false);\n    if (isFirstLoading === false) setIsFirstLoading(true);\n    setUpbitCoinInfo(tickers1);\n  }, [loading, isFirstLoading, coinList, dispatch, sortType, upbitBitKrw]);\n  useEffect(() => {\n    timer.current = setTimeout(getExchangeTickers, 2500);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers]);\n  const onSort = useCallback(\n    (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType === 1) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          setSortType(-1);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType === 2) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          setSortType(-2);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          console.log();\n          setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType === 3) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          setSortType(-3);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType === 4) {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 >\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(-4);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 <\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(4);\n        }\n      }\n    },\n    [sortType, upbitCoinInfo, upbitBitKrw]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <ExchangeCoinsContainer>\n          {\n            <CoinContainer>\n              <Coin head={true} onClick={onSort} data-id={1}>\n                코인\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={2}>\n                현재 가(₩)\n              </Coin>\n              <Coin head={true}>최저 가 </Coin>\n              <Coin head={true}>최고 가</Coin>\n              <Coin head={true} onClick={onSort} data-id={3}>\n                바이낸스(BTC)\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={4}>\n                차이(%)\n              </Coin>\n            </CoinContainer>\n          }\n          {upbitCoinInfo.map((v, idx) => {\n            const convertedBinance = (v.blast * upbitBitKrw).toFixed(2);\n            const percent = (\n              ((v.last - convertedBinance) / convertedBinance) *\n              100\n            ).toFixed(2);\n            return (\n              <CoinContainer key={v4()}>\n                <Coin>{v.symbol}</Coin>\n                <Coin>{v.last}₩</Coin>\n                <Coin>{v.low}₩ </Coin>\n                <Coin>{v.high}₩</Coin>\n                <Coin up={percent > 0}>\n                  {v.blast?.toFixed(8)}\n                  <p>{convertedBinance}₩</p>\n                </Coin>\n                <Coin up={percent > 0}>{percent}%</Coin>\n              </CoinContainer>\n            );\n          })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCoinList());\n  }, []);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport {\n  UPBIT_BITCOIN_KRW_SUCCESS,\n  UPBIT_BITCOIN_KRW_FAILURE,\n  UPBIT_BITCOIN_KRW_REQUEST,\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  BINANCE_BITCOIN_USDT_REQUEST,\n  BINANCE_BITCOIN_USDT_FAILURE,\n  BINANCE_BITCOIN_USDT_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction loadBitKrwAPI() {\n  return axios.get(\"https://api.upbit.com/v1/ticker?markets=KRW-BTC\");\n}\nfunction* loadBitKrw(action) {\n  try {\n    const result = yield call(loadBitKrwAPI, action.payload);\n    yield put({\n      type: UPBIT_BITCOIN_KRW_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BITCOIN_KRW_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitKrw() {\n  yield takeLatest(UPBIT_BITCOIN_KRW_REQUEST, loadBitKrw);\n}\n\nfunction loadCurrencyAPI() {\n  return axios.get(\"https://api.manana.kr/exchange/rate/KRW/USD.json\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield takeLatest(CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.us/api/v1/aggTrades?limit=1&symbol=BTCUSD\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(\n    \"https://api-manager.upbit.com/api/v1/notices/search?search=%5B%EA%B1%B0%EB%9E%98%5D&page=1&per_page=20&before=&target=non_ios&thread_name=general\"\n  );\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice`);\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data);\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data);\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${API_URL}coin`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchBitKrw),\n    fork(watchCurrency),\n    fork(watchBitUsdt),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data);\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}