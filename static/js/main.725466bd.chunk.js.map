{"version":3,"sources":["components/Loading.js","components/CurrentExchangeBar.js","reducers/bot.js","reducers/coin.js","components/SettingBar.js","components/NewListing.js","components/ExchangeList.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","ExchangeContainer","section","Info","p","CurrentExchangeBar","useSelector","state","coin","upbitBitKrw","usdToKrw","binanceBitUsdt","convertUsdToKrw","parseFloat","toFixed","sendMessage","createAction","handleActions","action","produce","draft","isSending","loadCoinList","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","loadBianceNewListing","checkUpbitCoin","checkBinanceCoin","setUpbit","setBinance","coinInfo","length","payload","coinList","map","name","isbitkrwLoading","trade_price","upbitBitKrwError","error","isUsdToKrwLoading","rate","usdToKrwError","isbitusdtLoading","binanceBitUsdtError","isUpbitNewListingLoading","filteredList","data","list","filter","v","title","includes","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","SettingBarDiv","InputWrapper","SelectContainer","SelectInput","input","SelectBtn","button","ApiContainer","ApiInput","SecretInput","SettingBtn","React","memo","dispatch","useDispatch","timer","useRef","selected","percent","wrapper","currentPer","startBot","useCallback","krw","selectedCoin","symbol","current","converted","blast","coinPer","last","Math","abs","binance","useEffect","onSelectChange","selectedOption","value","onPercentChange","e","target","onSetting","innerHTML","onToggle","style","display","onClickUpbit","alert","onClickBinance","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","onClick","ref","onChange","options","label","type","min","max","step","placeholder","NewListingDiv","hide","FontDiv","NewListingUl","ul","NewListingli","li","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","withComponent","BinanceInfoli","NewListing","useState","setSelected","isHide","setHide","container","onChangeSelect","id","dataset","parseInt","checkTodaysNotice","upbitNewNotices","binanceNewNotices","notices","faPlus","faMinus","data-id","key","v4","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","sortType","setSortType","getExchangeTickers","a","setTimeout","upbit","ccxt","fetchTickers","tickers1","tickers2","Object","keys","slice","indexOf","low","high","sort","x","y","convertedX","convertedY","clearTimeout","onSort","console","log","idx","convertedBinance","Header","header","Title","App","Boolean","window","location","hostname","match","combineReducers","bot","loadBitKrw","watchBitKrw","loadCurrency","watchCurrency","loadBitUsdt","watchBitUsdt","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","coinSaga","dotenv","config","API_URL","process","loadBitKrwAPI","axios","get","call","result","put","takeLatest","loadCurrencyAPI","loadBitUsdtAPI","loadUpbitNewListingAPI","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","all","fork","watchSendMessage","botSaga","sendMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.725466bd.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 33px;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = () => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  };\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw()} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n            convertUsdToKrw()) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\n\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW_REQUEST = \"UPBIT_BITCOIN_KRW_REQUEST\";\nexport const UPBIT_BITCOIN_KRW_SUCCESS = \"UPBIT_BITCOIN_KRW_SUCCESS\";\nexport const UPBIT_BITCOIN_KRW_FAILURE = \"UPBIT_BITCOIN_KRW_FAILURE\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\nexport const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW_REQUEST);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT_REQUEST);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\n\nconst initialState = {\n  isbitkrwLoading: false,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: false,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: false,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STORM\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n};\nexport default handleActions(\n  {\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BITCOIN_KRW_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = true;\n      }),\n    [UPBIT_BITCOIN_KRW_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = false;\n        draft.upbitBitKrw = action.payload[0].trade_price;\n      }),\n    [UPBIT_BITCOIN_KRW_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitBitKrwError = action.payload.error;\n      }),\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = action.payload[0].rate;\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: {\n            data: { list },\n          },\n        } = action;\n        const filteredList = list\n          .filter((v) => v.title.includes(\"BTC\"))\n          .map((v) => {\n            if (\n              moment(v.created_at).format(\"YYYY-MM-DD\") ===\n              moment().format(\"YYYY-MM-DD\")\n            )\n              return { new: true, notice: v };\n            else return { new: false, notice: v };\n          });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n  },\n  initialState\n);\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { setUpbit, setBinance } from \"../reducers/coin\";\nimport Select from \"react-select\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\n/*const Select = styled.select`\n  flex: 1;\n  height: 25px;\n  border: none;\n  background-color: white;\n`;*/\nconst SelectInput = styled.input`\n  width: 30px;\n  height: 25px;\n  padding: 0px 5px;\n  border: none;\n  margin-left: 5px;\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n`;\n\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst ApiInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n`;\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const { coinList } = useSelector((state) => state.coin);\n  const dispatch = useDispatch();\n  const timer = useRef();\n  const selected = useRef(0.0);\n  const percent = useRef(0.0);\n  const wrapper = useRef();\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const currentPer = useRef();\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const startBot = useCallback(\n    (coin, krw) => {\n      const selectedCoin = coin?.filter(\n        (v) => v.symbol === selected.current\n      )[0];\n      if (selectedCoin) {\n        const converted = selectedCoin.blast * krw;\n        const coinPer = parseFloat(\n          (((selectedCoin.last - converted) / converted) * 100).toFixed(2),\n          10\n        );\n        const p = parseFloat(percent.current, 10);\n        if (Math.abs(coinPer) > p) {\n          if (!currentPer.current || currentPer.current !== coinPer) {\n            currentPer.current = coinPer;\n            dispatch(\n              sendMessage({\n                coinInfo: selectedCoin,\n                binance: converted,\n                percent: coinPer,\n              })\n            );\n          }\n        }\n      }\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    if (timer.current) {\n      startBot(coinInfo, upbitBitKrw);\n    }\n  }, [coinInfo, upbitBitKrw, startBot]);\n  const onSelectChange = useCallback((selectedOption) => {\n    selected.current = selectedOption.value;\n    //setSelected(selectedOption.value);\n  }, []);\n  const onPercentChange = useCallback((e) => {\n    const { target } = e;\n    if (target.value >= 0 && target.value <= 100) {\n      percent.current = parseFloat(target.value, 10);\n    } else {\n      target.value = 0.0;\n    }\n  }, []);\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      if (selected !== -1 && percent !== -1) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          timer.current = true;\n        } else {\n          target.innerHTML = \"설정\";\n          timer.current = false;\n        }\n      }\n    },\n    [percent, selected]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  const onClickUpbit = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (upbitApi.current.value === \"\" || upbitSec.current.value === \"\") {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setUpbit({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        dispatch(\n          setUpbit({\n            upbitApi: \"\",\n            upbitSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickBinance = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setBinance({\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setBinance({\n            binanceApi: \"\",\n            binanceSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SelectContainer>\n          <Select\n            onChange={onSelectChange}\n            options={coinList.map((v) => {\n              return { value: v, label: v };\n            })}\n          />\n          <SelectInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onPercentChange}\n          />\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n        <ApiContainer>\n          <ApiInput ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n          <SecretInput\n            ref={upbitSec}\n            type=\"password\"\n            placeholder=\"업비트 secret\"\n          />\n          <SettingBtn onClick={onClickUpbit}>확인</SettingBtn>\n        </ApiContainer>\n        <ApiContainer>\n          <ApiInput ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n          <SecretInput\n            ref={binanceSec}\n            type=\"password\"\n            placeholder=\"바이낸스 secret\"\n          />\n          <SettingBtn onClick={onClickBinance}>확인</SettingBtn>\n        </ApiContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { checkUpbitCoin, checkBinanceCoin } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"35vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nfunction NewListing() {\n  const dispatch = useDispatch();\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    if (container.current.style.display === \"flex\") {\n      container.current.style.display = \"none\";\n      setHide(true);\n    } else {\n      container.current.style.display = \"flex\";\n      setHide(false);\n    }\n  }, []);\n\n  const checkTodaysNotice = useCallback(() => {\n    const upbitNewNotices = upbitNewListing.filter((v) => v.new === true);\n    const binanceNewNotices = binanceNewListing.filter((v) => v.new === true);\n    if (upbitNewNotices.length > 0) {\n      dispatch(\n        checkUpbitCoin({\n          notices: upbitNewNotices, //upbitNewNotices,\n        })\n      );\n    }\n    if (binanceNewNotices.length > 0) {\n      dispatch(\n        checkBinanceCoin({\n          notices: binanceNewNotices,\n        })\n      );\n    }\n  }, [upbitNewListing, binanceNewListing, dispatch]);\n  useEffect(() => {\n    checkTodaysNotice();\n  }, [checkTodaysNotice]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer style={{ display: \"flex\" }} ref={container}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((v) => {\n                return (\n                  <UpbitInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((v) => {\n                return (\n                  <BinanceInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </BinanceInfoli>\n                );\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ccxt from \"ccxt\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUsdToKrw,\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadUpbitNewListing,\n  loadBianceNewListing,\n  loadCoinInfo,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\n//const exchangeList = [\"Upbit\", \"Binance\"];\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 60%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Coin = styled.div`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:first-child {\n  }\n  &:nth-child(2) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(4) {\n  }\n  &:nth-child(5) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\nfunction ExchangeList() {\n  // const [selected, setSelected] = useState(0);\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(async () => {\n    if (timer.current) {\n      timer.current = setTimeout(getExchangeTickers, 2500);\n    }\n    //console.log(coinList);\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const upbit = new ccxt.upbit();\n    const binance = new ccxt.binance();\n    let tickers1 = await upbit.fetchTickers(coinList.map((v) => `${v}/KRW`)),\n      tickers2 = await binance.fetchTickers(coinList.map((v) => `${v}/BTC`));\n    tickers1 = Object.keys(tickers1)\n      .map((v) => {\n        return {\n          symbol: tickers1[v].symbol.slice(0, tickers1[v].symbol.indexOf(\"/\")),\n          last: tickers1[v].last,\n          low: tickers1[v].low,\n          high: tickers1[v].high,\n          blast:\n            tickers2[\n              `${tickers1[v].symbol.slice(\n                0,\n                tickers1[v].symbol.indexOf(\"/\")\n              )}/BTC`\n            ].last,\n        };\n      })\n      .sort((x, y) => {\n        const convertedX = x.blast * upbitBitKrw,\n          convertedY = y.blast * upbitBitKrw;\n        if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType === -4)\n          return (x.last - convertedX) / x.last > (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n        else if (sortType === 4)\n          return (x.last - convertedX) / x.last < (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n      });\n    dispatch(loadUpbitBitKrw());\n    dispatch(loadUsdToKrw());\n    dispatch(loadBinanceBitUsdt());\n    dispatch(loadUpbitNewListing());\n    dispatch(loadBianceNewListing());\n    if (loading === true) setLoading(false);\n    if (isFirstLoading === false) setIsFirstLoading(true);\n    setUpbitCoinInfo(tickers1);\n  }, [loading, isFirstLoading, coinList, dispatch, sortType, upbitBitKrw]);\n  useEffect(() => {\n    timer.current = setTimeout(getExchangeTickers, 2500);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers]);\n  const onSort = useCallback(\n    (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType === 1) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          setSortType(-1);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType === 2) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          setSortType(-2);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          console.log();\n          setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType === 3) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          setSortType(-3);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType === 4) {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 >\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(-4);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 <\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(4);\n        }\n      }\n    },\n    [sortType, upbitCoinInfo, upbitBitKrw]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <ExchangeCoinsContainer>\n          {\n            <CoinContainer>\n              <Coin head={true} onClick={onSort} data-id={1}>\n                코인\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={2}>\n                현재 가(₩)\n              </Coin>\n              <Coin head={true}>최저 가 </Coin>\n              <Coin head={true}>최고 가</Coin>\n              <Coin head={true} onClick={onSort} data-id={3}>\n                바이낸스(BTC)\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={4}>\n                차이(%)\n              </Coin>\n            </CoinContainer>\n          }\n          {upbitCoinInfo.map((v, idx) => {\n            const convertedBinance = (v.blast * upbitBitKrw).toFixed(2);\n            const percent = (\n              ((v.last - convertedBinance) / convertedBinance) *\n              100\n            ).toFixed(2);\n            return (\n              <CoinContainer key={v4()}>\n                <Coin>{v.symbol}</Coin>\n                <Coin>{v.last}₩</Coin>\n                <Coin>{v.low}₩ </Coin>\n                <Coin>{v.high}₩</Coin>\n                <Coin up={percent > 0}>\n                  {v.blast?.toFixed(8)}\n                  <p>{convertedBinance}₩</p>\n                </Coin>\n                <Coin up={percent > 0}>{percent}%</Coin>\n              </CoinContainer>\n            );\n          })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCoinList());\n  }, []);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport {\n  UPBIT_BITCOIN_KRW_SUCCESS,\n  UPBIT_BITCOIN_KRW_FAILURE,\n  UPBIT_BITCOIN_KRW_REQUEST,\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  BINANCE_BITCOIN_USDT_REQUEST,\n  BINANCE_BITCOIN_USDT_FAILURE,\n  BINANCE_BITCOIN_USDT_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction loadBitKrwAPI() {\n  return axios.get(\"https://api.upbit.com/v1/ticker?markets=KRW-BTC\");\n}\nfunction* loadBitKrw(action) {\n  try {\n    const result = yield call(loadBitKrwAPI, action.payload);\n    yield put({\n      type: UPBIT_BITCOIN_KRW_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BITCOIN_KRW_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitKrw() {\n  yield takeLatest(UPBIT_BITCOIN_KRW_REQUEST, loadBitKrw);\n}\n\nfunction loadCurrencyAPI() {\n  return axios.get(\"https://api.manana.kr/exchange/rate/KRW/USD.json\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield takeLatest(CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.us/api/v1/aggTrades?limit=1&symbol=BTCUSD\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(\n    \"https://api-manager.upbit.com/api/v1/notices/search?search=%5B%EA%B1%B0%EB%9E%98%5D&page=1&per_page=20&before=&target=non_ios&thread_name=general\"\n  );\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice`);\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data);\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data);\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${API_URL}coin`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchBitKrw),\n    fork(watchCurrency),\n    fork(watchBitUsdt),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}