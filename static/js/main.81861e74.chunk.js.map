{"version":3,"sources":["components/Loading.js","reducers/coin.js","components/CurrentExchangeBar.js","reducers/bot.js","components/ItemList.js","components/SettingTrade.js","components/SettingBar.js","components/NewListing.js","components/ExchangeList.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","loadCoinList","createAction","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","checkUpbitCoin","checkBinanceCoin","setUpbit","setBinance","setBtc","handleActions","state","action","produce","draft","btc","payload","coinInfo","length","coinList","map","coin","name","isbitkrwLoading","upbitBitKrw","trade_price","upbitBitKrwError","error","isUsdToKrwLoading","usdToKrw","rate","usdToKrwError","isbitusdtLoading","binanceBitUsdt","p","binanceBitUsdtError","isUpbitNewListingLoading","filteredList","data","list","filter","v","title","includes","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","ExchangeContainer","section","Info","CurrentExchangeBar","dispatch","useDispatch","useSelector","convertUsdToKrw","useCallback","parseFloat","toFixed","useEffect","converted","percent","symbol","last","sendMessage","cancelMessage","isSending","ItemListDiv","ItemListUl","ul","ItemListLi","li","ItemSpan","span","ItemInput","input","React","memo","coins","onChangePercent","type","min","max","step","placeholder","onChange","data-name","ApiContainer","Input","SecretInput","SettingBtn","button","TradeSettingDiv","withComponent","TradeBtn","timer","useRef","coinSymbol","current","startTrade","onClickUpbit","e","target","innerHTML","value","alert","onClickBinance","onClickTrade","onChangeCoin","console","log","blast","per","Math","abs","ref","onClick","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","wrapper","useState","setCoins","coinPer","setCoinPer","checkPer","startBot","coinlist","krw","Object","keys","forEach","indexOf","upbit","binance","dataset","onSetting","onToggle","style","display","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","NewListingDiv","hide","FontDiv","NewListingUl","NewListingli","selected","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","BinanceInfoli","NewListing","setSelected","isHide","setHide","container","onChangeSelect","id","parseInt","checkTodaysNotice","upbitNewNotices","binanceNewNotices","notices","faPlus","faMinus","data-id","key","v4","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","sortType","setSortType","getExchangeTickers","a","setTimeout","ccxt","fetchTickers","tickers1","tickers2","slice","low","high","sort","x","y","convertedX","convertedY","clearTimeout","onSort","idx","convertedBinance","Header","header","Title","App","Boolean","window","location","hostname","match","combineReducers","bot","loadBitKrw","watchBitKrw","loadCurrency","watchCurrency","loadBitUsdt","watchBitUsdt","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","coinSaga","dotenv","config","API_URL","process","loadBitKrwAPI","axios","get","call","result","put","takeLatest","loadCurrencyAPI","loadBitUsdtAPI","loadUpbitNewListingAPI","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","sendMessageAPI","cancelMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.81861e74.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const SETTING_BTC = \"SETTING_BTC\";\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW_REQUEST = \"UPBIT_BITCOIN_KRW_REQUEST\";\nexport const UPBIT_BITCOIN_KRW_SUCCESS = \"UPBIT_BITCOIN_KRW_SUCCESS\";\nexport const UPBIT_BITCOIN_KRW_FAILURE = \"UPBIT_BITCOIN_KRW_FAILURE\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\nexport const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW_REQUEST);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT_REQUEST);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\nexport const setBtc = createAction(SETTING_BTC);\n\nconst initialState = {\n  isbitkrwLoading: false,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: false,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: false,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  btc: {},\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STORM\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n};\nexport default handleActions(\n  {\n    [SETTING_BTC]: (state, action) =>\n      produce(state, (draft) => {\n        draft.btc = action.payload;\n      }),\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BITCOIN_KRW_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = true;\n      }),\n    [UPBIT_BITCOIN_KRW_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = false;\n        draft.upbitBitKrw = action.payload[0].trade_price;\n      }),\n    [UPBIT_BITCOIN_KRW_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitBitKrwError = action.payload.error;\n      }),\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = action.payload[0].rate;\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: {\n            data: { list },\n          },\n        } = action;\n        const filteredList = list\n          .filter((v) => v.title.includes(\"BTC\"))\n          .map((v) => {\n            if (\n              moment(v.created_at).format(\"YYYY-MM-DD\") ===\n              moment().format(\"YYYY-MM-DD\")\n            )\n              return { new: true, notice: v };\n            else return { new: false, notice: v };\n          });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n  },\n  initialState\n);\n","import React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setBtc } from \"../reducers/coin\";\n\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 33px;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const dispatch = useDispatch();\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = useCallback(() => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  }, [binanceBitUsdt, usdToKrw]);\n  useEffect(() => {\n    const converted = convertUsdToKrw(),\n      percent = (\n        ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n          convertUsdToKrw()) *\n        100\n      ).toFixed(2);\n    dispatch(\n      setBtc({\n        symbol: \"BTC\",\n        last: upbitBitKrw,\n        converted: parseFloat(converted, 10),\n        percent: parseFloat(percent, 10),\n      })\n    );\n  }, [convertUsdToKrw, dispatch, upbitBitKrw]);\n\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw()} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n            convertUsdToKrw()) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import React, { useRef, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\n\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: white;\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  border-left: 0;\n  border-right: 0;\n  width: 100%;\n`;\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 2px solid #e3e3e3;\n  width: 30%;\n  padding: 5px;\n`;\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        <ItemListLi>\n          <ItemSpan>BTC</ItemSpan>\n          <ItemInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onChangePercent}\n            data-name={\"BTC\"}\n          />\n        </ItemListLi>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi>\n                <ItemSpan>{coin.symbol}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin.symbol}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default React.memo(ItemList);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUpbit, setBinance } from \"../reducers/coin\";\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nconst TradeSettingDiv = ApiContainer.withComponent(\"div\");\nconst TradeBtn = styled(SettingBtn.withComponent(\"button\"))`\n  border-radius: 10px;\n  width: 50%;\n`;\nfunction SettingTrade({ coinInfo }) {\n  const dispatch = useDispatch();\n  const timer = useRef(false);\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const coinSymbol = useRef(\"\");\n  const percent = useRef(\"\");\n  const { upbitBitKrw } = useSelector((state) => state.coin);\n\n  useEffect(() => {\n    if (timer.current) {\n      startTrade();\n    }\n  });\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const onClickUpbit = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (upbitApi.current.value === \"\" || upbitSec.current.value === \"\") {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setUpbit({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        dispatch(\n          setUpbit({\n            upbitApi: \"\",\n            upbitSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickBinance = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setBinance({\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setBinance({\n            binanceApi: \"\",\n            binanceSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickTrade = useCallback((e) => {\n    if (\n      binanceApi.current.value === \"\" ||\n      binanceSec.current.value === \"\" ||\n      upbitApi.current.value === \"\" ||\n      upbitSec.current.value === \"\"\n    ) {\n      alert(\"API 와 Secret이 필요합니다\");\n    } else if (coinSymbol.current === \"\" || percent.current === \"\") {\n      alert(\"코인 & 차이(%) 설정이 필요합니다\");\n    } else {\n      if (timer.current === false) timer.current = true;\n      else timer.current = false;\n    }\n  }, []);\n  const onChangeCoin = useCallback((e) => {\n    const { target } = e;\n    coinSymbol.current = target.value;\n    console.log(coinSymbol.current);\n  }, []);\n  const onChangePercent = useCallback((e) => {\n    const { target } = e;\n    percent.current = target.value;\n  }, []);\n  const startTrade = useCallback(() => {\n    const coin = coinInfo.filter((coin) => coin.symbol === coinSymbol.current);\n    const converted = (coin[0].blast * upbitBitKrw).toFixed(2);\n    const p = parseFloat(percent.current, 10);\n    const per = parseFloat(\n      (((coin[0].last - converted) / converted) * 100).toFixed(2),\n      10\n    );\n    console.log(per, p);\n    if (Math.abs(per) >= p) {\n      if (per > 0) {\n        console.log(\"업비트 매도, 바이낸스 매수\");\n      } else {\n        console.log(\"업비트 매수, 바이낸스 매도\");\n      }\n    }\n  }, [coinInfo, upbitBitKrw]);\n  return (\n    <>\n      <ApiContainer>\n        <Input ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n        <SecretInput\n          ref={upbitSec}\n          type=\"password\"\n          placeholder=\"업비트 secret\"\n        />\n        <SettingBtn onClick={onClickUpbit}>확인</SettingBtn>\n      </ApiContainer>\n      <ApiContainer>\n        <Input ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n        <SecretInput\n          ref={binanceSec}\n          type=\"password\"\n          placeholder=\"바이낸스 secret\"\n        />\n        <SettingBtn onClick={onClickBinance}>확인</SettingBtn>\n      </ApiContainer>\n      <TradeSettingDiv>\n        <Input type=\"text\" placeholder=\"코인\" onChange={onChangeCoin} />\n        <Input\n          type=\"number\"\n          placeholder=\"차이%\"\n          min={0}\n          max={100}\n          step={0.1}\n          onChange={onChangePercent}\n        />\n        <TradeBtn onClick={onClickTrade}>자전 설정</TradeBtn>\n      </TradeSettingDiv>\n    </>\n  );\n}\n\nexport default React.memo(SettingTrade);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendMessage, cancelMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ItemList from \"./ItemList\";\nimport SettingTrade from \"./SettingTrade\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const timer = useRef();\n  const wrapper = useRef();\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  const checkPer = useRef({});\n  const { btc } = useSelector((state) => state.coin);\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const startBot = useCallback(\n    (coinlist, krw) => {\n      const coinPerLength = Object.keys(coinPer).length;\n      if (coinPerLength > 0) {\n        [{ symbol: \"BTC\" }, ...coinlist].forEach((coin) => {\n          if (\n            Object.keys(coinPer).indexOf(coin.symbol) !== -1 &&\n            coinPer[coin.symbol] !== \"\"\n          ) {\n            if (coin.symbol !== \"BTC\") {\n              const converted = (coin.blast * krw).toFixed(2);\n              const p = parseFloat(coinPer[coin.symbol], 10);\n              const per = parseFloat(\n                (((coin.last - converted) / converted) * 100).toFixed(2),\n                10\n              );\n              if (Math.abs(per) > p) {\n                if (Object.keys(checkPer.current).indexOf(coin.symbol) === -1) {\n                  checkPer.current = {\n                    ...checkPer.current,\n                    [coin.symbol]: per,\n                  };\n                  dispatch(\n                    sendMessage({\n                      coinInfo: {\n                        symbol: coin.symbol,\n                        upbit: coin.last,\n                        binance: converted,\n                        percent: per,\n                      },\n                    })\n                  );\n                } else {\n                  if (checkPer.current[coin.symbol] !== per) {\n                    checkPer.current = {\n                      ...checkPer.current,\n                      [coin.symbol]: per,\n                    };\n                    dispatch(\n                      sendMessage({\n                        coinInfo: {\n                          symbol: coin.symbol,\n                          upbit: coin.last,\n                          binance: converted,\n                          percent: per,\n                        },\n                      })\n                    );\n                  }\n                }\n              }\n            } else {\n              const p = parseFloat(coinPer[coin.symbol], 10);\n              if (Math.abs(btc.percent) > p) {\n                if (Object.keys(checkPer.current).indexOf(coin.symbol) === -1) {\n                  checkPer.current = {\n                    ...checkPer.current,\n                    [coin.symbol]: btc.percent,\n                  };\n                  dispatch(\n                    sendMessage({\n                      coinInfo: {\n                        symbol: coin.symbol,\n                        upbit: btc.last,\n                        binance: btc.converted,\n                        percent: btc.percent,\n                      },\n                    })\n                  );\n                } else {\n                  if (checkPer.current[coin.symbol] !== btc.percent) {\n                    checkPer.current = {\n                      ...checkPer.current,\n                      [coin.symbol]: btc.percent,\n                    };\n                    dispatch(\n                      sendMessage({\n                        coinInfo: {\n                          symbol: coin.symbol,\n                          upbit: btc.last,\n                          binance: btc.converted,\n                          percent: btc.percent,\n                        },\n                      })\n                    );\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    },\n    [coinPer, dispatch, btc]\n  );\n  useEffect(() => {\n    if (timer.current) {\n      startBot(coinInfo, upbitBitKrw);\n    }\n    if (coins.length === 0) {\n      setCoins(coinInfo);\n    }\n  }, [coinInfo, upbitBitKrw, startBot, coins]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          timer.current = true;\n        } else {\n          target.innerHTML = \"설정\";\n          timer.current = false;\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SettingTrade coinInfo={coinInfo} />\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { checkUpbitCoin, checkBinanceCoin } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"35vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nfunction NewListing() {\n  const dispatch = useDispatch();\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    if (container.current.style.display === \"flex\") {\n      container.current.style.display = \"none\";\n      setHide(true);\n    } else {\n      container.current.style.display = \"flex\";\n      setHide(false);\n    }\n  }, []);\n\n  const checkTodaysNotice = useCallback(() => {\n    const upbitNewNotices = upbitNewListing.filter((v) => v.new === true);\n    const binanceNewNotices = binanceNewListing.filter((v) => v.new === true);\n    if (upbitNewNotices.length > 0) {\n      dispatch(\n        checkUpbitCoin({\n          notices: upbitNewNotices, //upbitNewNotices,\n        })\n      );\n    }\n    if (binanceNewNotices.length > 0) {\n      dispatch(\n        checkBinanceCoin({\n          notices: binanceNewNotices,\n        })\n      );\n    }\n  }, [upbitNewListing, binanceNewListing, dispatch]);\n  useEffect(() => {\n    checkTodaysNotice();\n  }, [checkTodaysNotice]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer style={{ display: \"flex\" }} ref={container}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((v) => {\n                return (\n                  <UpbitInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((v) => {\n                return (\n                  <BinanceInfoli key={v4()} new={v.new === true}>\n                    {v.notice.title}\n                  </BinanceInfoli>\n                );\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ccxt from \"ccxt\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUsdToKrw,\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadUpbitNewListing,\n  loadBianceNewListing,\n  loadCoinInfo,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\n//const exchangeList = [\"Upbit\", \"Binance\"];\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 60%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Coin = styled.div`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:first-child {\n  }\n  &:nth-child(2) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(4) {\n  }\n  &:nth-child(5) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\nfunction ExchangeList() {\n  // const [selected, setSelected] = useState(0);\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(async () => {\n    if (timer.current) {\n      timer.current = setTimeout(getExchangeTickers, 2500);\n    }\n    //console.log(coinList);\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const upbit = new ccxt.upbit();\n    const binance = new ccxt.binance();\n    let tickers1 = await upbit.fetchTickers(coinList.map((v) => `${v}/KRW`)),\n      tickers2 = await binance.fetchTickers(coinList.map((v) => `${v}/BTC`));\n    tickers1 = Object.keys(tickers1)\n      .map((v) => {\n        return {\n          symbol: tickers1[v].symbol.slice(0, tickers1[v].symbol.indexOf(\"/\")),\n          last: tickers1[v].last,\n          low: tickers1[v].low,\n          high: tickers1[v].high,\n          blast:\n            tickers2[\n              `${tickers1[v].symbol.slice(\n                0,\n                tickers1[v].symbol.indexOf(\"/\")\n              )}/BTC`\n            ].last,\n        };\n      })\n      .sort((x, y) => {\n        const convertedX = x.blast * upbitBitKrw,\n          convertedY = y.blast * upbitBitKrw;\n        if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType === -4)\n          return (x.last - convertedX) / x.last > (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n        else if (sortType === 4)\n          return (x.last - convertedX) / x.last < (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n      });\n    dispatch(loadUpbitBitKrw());\n    dispatch(loadUsdToKrw());\n    dispatch(loadBinanceBitUsdt());\n    dispatch(loadUpbitNewListing());\n    //dispatch(loadBianceNewListing());\n    if (loading === true) setLoading(false);\n    if (isFirstLoading === false) setIsFirstLoading(true);\n    setUpbitCoinInfo(tickers1);\n  }, [loading, isFirstLoading, coinList, dispatch, sortType, upbitBitKrw]);\n  useEffect(() => {\n    timer.current = setTimeout(getExchangeTickers, 2500);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers]);\n  const onSort = useCallback(\n    (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType === 1) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          setSortType(-1);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType === 2) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          setSortType(-2);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          console.log();\n          setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType === 3) {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          setSortType(-3);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType === 4) {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 >\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(-4);\n        } else {\n          upbitCoinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 <\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(4);\n        }\n      }\n    },\n    [sortType, upbitCoinInfo, upbitBitKrw]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <ExchangeCoinsContainer>\n          {\n            <CoinContainer>\n              <Coin head={true} onClick={onSort} data-id={1}>\n                코인\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={2}>\n                현재 가(₩)\n              </Coin>\n              <Coin head={true}>최저 가 </Coin>\n              <Coin head={true}>최고 가</Coin>\n              <Coin head={true} onClick={onSort} data-id={3}>\n                바이낸스(BTC)\n              </Coin>\n              <Coin head={true} onClick={onSort} data-id={4}>\n                차이(%)\n              </Coin>\n            </CoinContainer>\n          }\n          {upbitCoinInfo.map((v, idx) => {\n            const convertedBinance = (v.blast * upbitBitKrw).toFixed(2);\n            const percent = (\n              ((v.last - convertedBinance) / convertedBinance) *\n              100\n            ).toFixed(2);\n            return (\n              <CoinContainer key={v4()}>\n                <Coin>{v.symbol}</Coin>\n                <Coin>{v.last}₩</Coin>\n                <Coin>{v.low}₩ </Coin>\n                <Coin>{v.high}₩</Coin>\n                <Coin up={percent > 0}>\n                  {v.blast?.toFixed(8)}\n                  <p>{convertedBinance}₩</p>\n                </Coin>\n                <Coin up={percent > 0}>{percent}%</Coin>\n              </CoinContainer>\n            );\n          })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCoinList());\n  }, []);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport {\n  UPBIT_BITCOIN_KRW_SUCCESS,\n  UPBIT_BITCOIN_KRW_FAILURE,\n  UPBIT_BITCOIN_KRW_REQUEST,\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  BINANCE_BITCOIN_USDT_REQUEST,\n  BINANCE_BITCOIN_USDT_FAILURE,\n  BINANCE_BITCOIN_USDT_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction loadBitKrwAPI() {\n  return axios.get(\"https://api.upbit.com/v1/ticker?markets=KRW-BTC\");\n}\nfunction* loadBitKrw(action) {\n  try {\n    const result = yield call(loadBitKrwAPI, action.payload);\n    yield put({\n      type: UPBIT_BITCOIN_KRW_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BITCOIN_KRW_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitKrw() {\n  yield takeLatest(UPBIT_BITCOIN_KRW_REQUEST, loadBitKrw);\n}\n\nfunction loadCurrencyAPI() {\n  return axios.get(\"https://api.manana.kr/exchange/rate/KRW/USD.json\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield takeLatest(CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.us/api/v1/aggTrades?limit=1&symbol=BTCUSD\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(\n    \"https://api-manager.upbit.com/api/v1/notices/search?search=%5B%EA%B1%B0%EB%9E%98%5D&page=1&per_page=20&before=&target=non_ios&thread_name=general\"\n  );\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice`);\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data);\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data);\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${API_URL}coin`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchBitKrw),\n    fork(watchCurrency),\n    fork(watchBitUsdt),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data);\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}